// Player Moving ***********************************************************************************************************
public class PlayerScript : MonoBehaviour
{
    public float speed = 5;
    void Start()
    {
    }

    void Update()
    {
            float x = Input.GetAxisRaw("Horizontal");
            float y = Input.GetAxisRaw("Vertical");
            Vector3 dir = new Vector3(x, y, 0).normalized; // normalized => 대각선도 같은 크기로 움직이게 해준다.
            transform.position = transform.position + dir * Time.deltaTime * speed;
    }
}

// 캐릭터 위치 제한 걸기 ****************************************************************************************************
public class PlayerScript : MonoBehaviour
{
    Vector3 min, max;
    Vector2 colSize;
    Vector2 chrSize;

    void Start()
    {
        min = Camera.main.ViewportToWorldPoint(new Vector3(0, 0, 0));
        print(min);
        max = Camera.main.ViewportToWorldPoint(new Vector3(1, 1, 0));
        print(max);
        colSize = GetComponent<BoxCollider2D>().size;
        chrSize = new Vector2(colSize.x / 2, colSize.y / 2);
    }

    void Update()
    {
            float newX = transform.position.x;
            float newY = transform.position.y;

             if (newX < min.x + chrSize.x) 
                newX = min.x + chrSize.x;
            if (newX > max.x - chrSize.x)
                newX = max.x - chrSize.x;
        
            if (newY < min.y + chrSize.y)
                newY = min.y + chrSize.y;
            if (newY > max.y - chrSize.y)
                newY = max.y - chrSize.y;

        transform.position = new Vector3(newX, newY, transform.position.z);
    }
}

// mathf.Clamp로 캐릭터 위치 제한 걸기 (위와 같은 기능, 대체 가능)**************************************************************
public class PlayerScript : MonoBehaviour
{
    Vector3 min, max;
    Vector2 colSize;
    Vector2 chrSize;

    void Start()
    {
        min = new Vector3(-8, -4.5f, 0);
        max = new Vector3(8, 4.5f, 0);
        colSize = GetComponent<BoxCollider2D>().size;
        chrSize = new Vector2(colSize.x/2, colSize.y/2);
    }

    void Update()
    {
            float newX = transform.position.x;
            float newY = transform.position.y;

        newX = Mathf.Clamp(newX, min.x + chrSize.x, max.x - chrSize.x-0.1f); // 0.1f는 튀어나온 캐릭터를 들어가게 하기 위해 조정한 것이다. 
        newY = Mathf.Clamp(newY, min.y + chrSize.y, max.y - chrSize.y);

        transform.position = new Vector3(newX, newY, transform.position.z);
    }
}





